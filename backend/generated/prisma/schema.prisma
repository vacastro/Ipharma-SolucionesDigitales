generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Proveedor {
  id           Int           @id @default(autoincrement())
  nombre       String
  direccion    String
  telefono     Int
  medicamentos Medicamento[]
}

model Medicamento {
  id                  Int                 @id @default(autoincrement())
  nombre              String
  principioActivo     String              @map("principio_activo")
  laboratorio         String
  proveedorId         Int                 @map("proveedor_id")
  fechaVencimiento    DateTime            @map("fecha_vencimiento")
  formaFarmaceutica   FormaFarmaceutica   @map("forma_farmaceutica")
  presentacion        Presentacion        @map("presentacion")
  lote                String
  stock               Int                 @map("stock")
  devoluciones        Devolucion[]
  inventarios         Inventario[]
  proveedor           Proveedor           @relation(fields: [proveedorId], references: [id])
  recetasMedicamentos RecetaMedicamento[]
  ventaMedicamentos   VentaMedicamento[]

  @@index([proveedorId], map: "Medicamento_proveedor_id_fkey")
}

model Devolucion {
  id            Int         @id @default(autoincrement())
  medicamentoId Int         @map("medicamento_id")
  fecha         DateTime
  cantidad      Int
  motivo        String
  medicamento   Medicamento @relation(fields: [medicamentoId], references: [id])

  @@index([medicamentoId], map: "Devolucion_medicamento_id_fkey")
}

model Inventario {
  id            Int         @id @default(autoincrement())
  medicamentoId Int         @map("medicamento_id")
  fecha         DateTime
  cantidad      Int
  medicamento   Medicamento @relation(fields: [medicamentoId], references: [id])

  @@index([medicamentoId], map: "Inventario_medicamento_id_fkey")
}

model Receta {
  id                 Int                 @id @default(autoincrement())
  pacienteNombre     String              @map("paciente_nombre")
  medicoNombre       String              @map("medico_nombre")
  fecha              DateTime
  recetaMedicamentos RecetaMedicamento[]
}

model RecetaMedicamento {
  id            Int         @id @default(autoincrement())
  recetaId      Int         @map("receta_id")
  medicamentoId Int         @map("medicamento_id")
  cantidad      Int
  estado        Estado      @default(pendiente)
  medicamento   Medicamento @relation(fields: [medicamentoId], references: [id])
  receta        Receta      @relation(fields: [recetaId], references: [id])

  @@index([medicamentoId], map: "RecetaMedicamento_medicamento_id_fkey")
  @@index([recetaId], map: "RecetaMedicamento_receta_id_fkey")
}

model Venta {
  id                Int                @id @default(autoincrement())
  fecha             DateTime
  clienteId         Int                @map("cliente_id")
  usuarioId         Int                @map("usuario_id")
  total             Decimal
  formaPago         FormaPago
  cliente           Cliente            @relation(fields: [clienteId], references: [id])
  usuario           Usuario            @relation(fields: [usuarioId], references: [id])
  ventaMedicamentos VentaMedicamento[]

  @@index([clienteId], map: "Venta_cliente_id_fkey")
  @@index([usuarioId], map: "Venta_usuario_id_fkey")
}

model VentaMedicamento {
  id             Int         @id @default(autoincrement())
  ventaId        Int         @map("venta_id")
  medicamentoId  Int         @map("medicamento_id")
  cantidad       Int
  precioUnitario Decimal     @map("precio_unitario")
  medicamento    Medicamento @relation(fields: [medicamentoId], references: [id])
  venta          Venta       @relation(fields: [ventaId], references: [id])

  @@index([medicamentoId], map: "VentaMedicamento_medicamento_id_fkey")
  @@index([ventaId], map: "VentaMedicamento_venta_id_fkey")
}

model Usuario {
  id     Int     @id @default(autoincrement())
  nombre String
  email  String
  clave  String
  perfil Perfil
  activo Boolean
  ventas Venta[]
}

model Cliente {
  id        Int     @id @default(autoincrement())
  email     String
  nombre    String
  suscripto Boolean
  ventas    Venta[]
}

enum FormaFarmaceutica {
  comprimido
  solucion
}

enum Presentacion {
  caja5
  caja10
  solucion50
  solucion80
}

enum Estado {
  pendiente
  recibido
}

enum FormaPago {
  efectivo
  tarjeta
}

enum Perfil {
  farmaceutico
  administrativo
}
