name: CI/CD - Ipharma

on:
  push:
    branches:
      - produccion
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Cachear node_modules
        uses: actions/cache@v3
        with:
          path: ./backend/node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Instalar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependencias backend
        run: npm install
        working-directory: ./backend

      - name: Crear archivo .env
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SWAGGER_API_URL=${{ secrets.SWAGGER_API_URL }}" >> .env
          echo "SWAGGER_APIS_PATH=${{ secrets.SWAGGER_APIS_PATH }}" >> .env
        working-directory: ./backend

      - name: Generar Prisma Client
        run: npx prisma generate
        working-directory: ./backend

      - name: Compilar backend
        run: npm run build
        working-directory: ./backend

      - name: Ejecutar tests
        run: npm test
        working-directory: ./backend

  docker-build-and-push:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v3

      - name: Login en Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Buildear imagen backend
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ipharma-backend:${{ github.sha }} ./backend

      - name: Buildear imagen frontend
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ipharma-frontend:${{ github.sha }} ./frontend

      - name: Pushear imagen backend
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ipharma-backend:${{ github.sha }}

      - name: Pushear imagen frontend
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ipharma-frontend:${{ github.sha }}

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Llamar hook de deploy en Render (o similar)
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}